name: Release And Publish

on:
  push:
    branches:
      - main
      - dev

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Remove beta tag from version if on main
        if: github.ref == 'refs/heads/main'
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [[ $CURRENT_VERSION == *-beta* ]]; then
            CLEAN_VERSION=$(echo $CURRENT_VERSION | sed 's/-beta\.[0-9]*//')
            npm version $CLEAN_VERSION --no-git-tag-version
            git config --global user.name 'GitHub Action'
            git config --global user.email 'action@github.com'
            git add package.json
            git commit -m "chore: remove beta tag from version"
            git push
          fi

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

  create-pr-to-main:
    needs: release
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Ensure release label exists
        run: |
          gh label list | grep -q "release" || gh label create "release" --color "#0E8A16" --description "Release related changes"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request directly from dev to main
        run: |
          gh pr create --base main --head dev \
            --title "chore(release): sync dev to main" \
            --body "This PR syncs changes from dev to main branch, including version updates and CHANGELOG." \
            --label "release" || echo "PR may already exist"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
